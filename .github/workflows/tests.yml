
name: tests
#Running tests on all branches
on:
  push:
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  # This is a job for linux python3 tests
  linuxpy3:

    # Setup the Python that the ROOT binary was built against
    runs-on: ${{ matrix.os }}
    # On push events run the CI only on master by default, but run on any branch if the commit message contains '[ci all]'
    if: >-
      github.event_name != 'push'
      || (github.event_name == 'push' && github.ref == 'refs/heads/master')
      || (github.event_name == 'push' && github.ref != 'refs/heads/master' && contains(github.event.head_commit.message, '[ci all]'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade \
          'pylint==2.9.6' \
          pytest_pylint \
          configparser \
          astroid \
          pyyml \
          papermill \
          nbconvert \
          jupyter \
          pytest \
          pytest-cov

    - name: Install hepdata_lib
      run: python -m pip install .[test]

    - name: Fixup ImageMagick
      run: |
        sudo sed -i '/.*PDF.*/ s/none/read | write/g' /etc/ImageMagick*/policy.xml
        ls /etc/ImageMagick*/policy.xml
        cat /etc/ImageMagick*/policy.xml
        sudo apt update
        sudo apt install ghostscript
        echo "---GS---"
        which gs
        echo "--------"

    - name: Install ROOT
      run: |
        wget -q https://root.cern/download/root_v6.24.00.Linux-ubuntu20-x86_64-gcc9.3.tar.gz
        tar xf *tar.gz
        source root/bin/thisroot.sh
        root-config --python-version

    # Use python -m pytest to add current working dir as src/ dir layout not used
    - name: Run pytest
      run: |
        source root/bin/thisroot.sh
        python -m pytest tests

    - name: Report coverage with Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests-${{ matrix.python-version }}

    - name: Save notebooks
      if: ${{ always() }}
      run: |
        python -m jupyter kernelspec list
        python -m jupyter nbconvert --ExecutePreprocessor.timeout=600 --ExecutePreprocessor.allow_errors=True --to html --execute examples/*.ipynb

    - name: Upload notebooks
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: notebooks py3
        path: examples/*.html

    - name: Run pylint
      if: ${{ always() }}
      run: |
        python -m pylint hepdata_lib/*.py
        python -m pylint tests/*.py --rcfile=tests/pylintrc

 # This is a job for macOS python3 tests
#   macospy3:
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@v2
        
#       # Install dependencies
#       - name: Install dependencies
#         run: |
#           brew update
#           brew install fontconfig gd gettext libffi glib jasper netpbm gts graphviz gsl libxml2 openblas numpy tbb xrootd || true
#           brew install python@3.8 openssl@1.1 || true
          
#       # Run pytest
#       - name: Run pytest
#         run: |
#           ROOT_VERSION=6.20.04_1
#           curl -O https://clange.web.cern.ch/clange/root-v${ROOT_VERSION}.tar.gz
#           tar xzf root-v${ROOT_VERSION}.tar.gz
#           mkdir -p /usr/local/Cellar/root
#           mv ${ROOT_VERSION} /usr/local/Cellar/root/
#           cd /usr/local/Cellar/root/${ROOT_VERSION}
#           export PATH=${PWD}/bin:$(brew --cellar python@3.8)/$(ls $(brew --cellar python@3.8))/bin:${PATH}
#           export PYTHONPATH=${PWD}/lib/root:${PYTHONPATH}
#           export LD_LIBRARY_PATH=${PWD}/lib/root:${LD_LIBRARY_PATH}
#           echo ${PYTHONPATH}
#           cd -
#           python3 -m pip install pytest ipykernel papermill jupyter_client nbconvert
#           python3 setup.py test
          
#       # Save notebooks
#       - name: Save notebooks
#         if: ${{ always() }}
#         run: |
#           cd /usr/local/Cellar/root/${ROOT_VERSION}
#           export PATH=${PWD}/bin:$(brew --cellar python@3.8)/$(ls $(brew --cellar python@3.8))/bin:${PATH}
#           export PYTHONPATH=${PWD}/lib/root:${PYTHONPATH}
#           export LD_LIBRARY_PATH=${PWD}/lib/root:${LD_LIBRARY_PATH}
#           echo ${PYTHONPATH}
#           cd -
#           python3 -m jupyter nbconvert --ExecutePreprocessor.timeout=600 --ExecutePreprocessor.kernel_name=python3 --ExecutePreprocessor.allow_errors=True --to html --execute examples/*.ipynb
          
#       # Upload notebooks
#       - name: Upload notebooks
#         if: ${{ always() }}
#         uses: actions/upload-artifact@v2
#         with:
#           name: notebooks macOS
#           path: examples/*.html
          
#       # Run Pylint
#       - name: Run Pylint
#         if: ${{ always() }}
#         run: |
#           python3 -m pip install pytest ipykernel papermill
#           python3 -m pip install -e .
#           python3 -m pylint hepdata_lib/*.py
#           python3 -m pylint tests/*.py --rcfile=tests/pylintrc
          
#  # This is a job for linux python2.7 tests
#   linuxpy27:
#     runs-on: ubuntu-16.04
#     steps:
#     - uses: actions/checkout@v2
      
#     # Install dependencies
#     - name: Install dependencies
#       run: |
#         sudo apt-get install python2.7
#         python -m pip install --upgrade pip
#         python -m pip install --upgrade setuptools
#         curl -O https://root.cern.ch/download/root_v6.20.00.Linux-ubuntu16-x86_64-gcc5.4.tar.gz
#         tar xzf root_v6.20.00.Linux-ubuntu16-x86_64-gcc5.4.tar.gz
#         python -m pip install numpy==1.16.5
#         sudo sed -i '/MVG/d' /etc/ImageMagick-6/policy.xml
#         sudo sed -i '/PDF/{s/none/read|write/g}' /etc/ImageMagick-6/policy.xml
#         sudo sed -i '/PDF/ a <policy domain="coder" rights="read|write" pattern="LABEL" />' /etc/ImageMagick-6/policy.xml
#         python -m pip install --upgrade enum34 pytest_pylint configparser astroid future ipykernel papermill nbconvert
#         sudo apt update
#         sudo apt install -y ghostscript
        
#     # Run pytest
#     - name: Run pytest
#       run: |
#         source root/bin/thisroot.sh
#         python setup.py test
        
#     # Save notebooks
#     - name: Save notebooks
#       if: ${{ always() }}
#       run: |
#         source root/bin/thisroot.sh
#         export PATH=$PATH:~/.local/bin
#         source ~/.bash_profile
#         jupyter nbconvert --ExecutePreprocessor.timeout=600 --ExecutePreprocessor.kernel_name=python2 --ExecutePreprocessor.allow_errors=True --to html --execute examples/*.ipynb
#     # Upload notebooks
#     - name: Upload notebooks
#       if: ${{ always() }}
#       uses: actions/upload-artifact@v2
#       with:
#         name: notebooks py27
#         path: examples/*.html
        
#     # Run pylint
#     - name: Run Pylint
#       if: ${{ always() }}
#       run: |      
#         python -m pylint hepdata_lib/*.py
#         python -m pylint tests/*.py --rcfile=tests/pylintrc
